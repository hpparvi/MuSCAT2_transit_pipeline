#!/usr/bin/env python

from argparse import ArgumentParser
from multiprocessing import Pool
from pathlib import Path
from time import sleep

import matplotlib as mpl
mpl.use('Agg')
import matplotlib.pyplot as pl
import pandas as pd

import xarray as xa
from astropy.visualization import simple_norm as sn
from numpy import *
from tqdm import tqdm

from muscat2ph.photometry import ScienceFrame

passbands = 'g r i z_s'.split()
N = lambda a: a/median(a)

def init():
    global a
    a = 2

def f(x):
    sleep(0.5)
    return x*x

if __name__ == '__main__':
    ap = ArgumentParser()
    ap.add_argument('datadir', type=str)
    ap.add_argument('object', type=str)
    ap.add_argument('passband', choices='g r i z_s all'.split())
    ap.add_argument('--result-dir', type=str, default='.')
    ap.add_argument('--max-stars', type=int, default=8)
    ap.add_argument('--edge-limit', type=float, default=30)
    ap.add_argument('--start-frame', type=int, default=0)
    ap.add_argument('--end-frame', type=int, default=inf)
    ap.add_argument('--plot-only', action='store_false', dest='do_photometry', default=True)
    ap.add_argument('--n-processes', type=int, default=5)
    ap.add_argument('--save-stars', action='store_true', default=False)
    args = ap.parse_args()

    root = Path(args.datadir)
    rdir = Path(args.result_dir)

    files = {pb : list(root.joinpath('obj', args.object, pb).glob('MCT2?_*.fits')) for pb in 'g r i z_s'.split()}
    pbs = [args.passband] if args.passband != 'all' else 'g r i z_s'.split()

    with Pool(processes=4, initializer=init) as pool:
        x = arange(12)
        result = list(tqdm(pool.imap(f, x)))
        print(result)